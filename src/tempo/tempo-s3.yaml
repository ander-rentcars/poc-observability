server:
  http_listen_port: 3200

distributor:
  receivers:
    otlp:
      protocols:
        http:
        grpc:   

ingester:
  max_block_duration: 5m

compactor:
  compaction:
    block_retention: 24h

metrics_generator:
  processor:
    span_metrics:
      dimensions:
        - http.method
        - http.target
    service_graphs:
      max_items: 50000
      dimensions:
        - http.method
        - http.target 
  registry:
    external_labels:
      source: tempo
      cluster: docker-compose
  storage:
    path: /tmp/tempo/generator/wal
    remote_write:
      - url: http://prometheus:9090/api/v1/write
        send_exemplars: true

storage:
  trace:
    backend: s3                        # backend configuration to use
    wal:
      path: /tmp/tempo/wal             # where to store the the wal locally
    s3:
      bucket: tempo                    # how to store data in s3
      endpoint: minio:9000
      access_key: tempo
      secret_key: supersecret
      insecure: true
      # For using AWS, select the appropriate regional endpoint and region
      # endpoint: s3.dualstack.us-west-2.amazonaws.com
      # region: us-west-2

overrides:
  metrics_generator_processors: [service-graphs, span-metrics]