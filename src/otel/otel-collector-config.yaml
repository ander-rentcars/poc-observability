receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:5555
      http:
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"

exporters:
  logging:

  loki:
    endpoint: "http://loki:3100/loki/api/v1/push"

  jaeger:
    endpoint: jaeger-all-in-one:14250
    tls:
      insecure: true

  zipkin:
    endpoint: "http://zipkin-all-in-one:9411/api/v2/spans"
    format: proto

  prometheus:
    endpoint: otel-collector:8889
    resource_to_telemetry_conversion:
      enabled: true
    enable_open_metrics: true

  otlp/tempo:
    endpoint: "http://tempo:4317"
    tls:
      insecure: true


processors:
  batch:

  spanmetrics:
    metrics_exporter: prometheus
   
  servicegraph:
    metrics_exporter: prometheus

  attributes:
    actions:
    - action: insert
      key: event_domain
      from_attribute: event.domain
    - action: insert
      key: loki.attribute.labels
      value: event_domain

  resource:
    attributes:
    - action: insert
      key: service_name
      from_attribute: service.name
    - action: insert
      key: service_namespace
      from_attribute: service.namespace
    - action: insert
      key: loki.resource.labels
      value: service_name, service_namespace

extensions:
  health_check:
  pprof:
    endpoint: :1888
  zpages:
    endpoint: :55679

service:
  extensions: [pprof, zpages, health_check]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [zipkin, jaeger, otlp/tempo, logging]
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [prometheus, logging]
    logs:
      receivers: [otlp]
      processors: [resource, attributes]
      exporters: [logging, loki]